import{d as i,u,s as c,q as C,o as d,b as p,i as _,z as m,j as l,e as o,k as f,F as v,t as x,A as I}from"./index-27309195.js";const V=o("label",{for:"coordInput"},"Planetary Coordinates",-1),h=["aria-invalid"],T=i({__name:"CoordinateInput",setup(a){const e=u(),{coordinates:t}=c(e),n=C(!0),s=/^[+-](?:[0-9]{1,3})\.(?:[0-9]{2}), [+-](?:[0-9]{1,3})\.(?:[0-9]{2})$/,i=()=>n.value=s.test(t.value)||!t.value;return(a,e)=>(d(),p(v,null,[V,_(o("input",{"aria-invalid":!n.value||void 0,id:"coordInput",placeholder:"+0.00, -0.00",type:"text","onUpdate:modelValue":e[0]||(e[0]=a=>f(t)?t.value=a:null),onChange:i},null,40,h),[[m,l(t)]])],64))}}),D={for:"locInput"},b=i({__name:"LocationPlanetInput",props:{locationType:{default:"planet"}},setup(a){const e=u(),{locationName:t}=c(e);return(a,e)=>(d(),p(v,null,[o("label",D,x(l(I)(a.locationType))+" Name",1),_(o("input",{type:"text",id:"locInput","onUpdate:modelValue":e[0]||(e[0]=a=>f(t)?t.value=a:null)},null,512),[[m,l(t)]])],64))}});export{b as _,T as a};
