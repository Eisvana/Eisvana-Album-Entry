import{d as u,u as c,s as d,q as y,B as V,i as g,o as r,b as p,j as _,z as m,k as t,e as n,c as h,w as x,a as I,E as k,y as B,F as v,t as D,A as N}from"./index-8505a597.js";const T=n("label",{class:"required",for:"coordInput"},"Planetary Coordinates",-1),w=["aria-invalid"],q=u({__name:"CoordinateInput",setup(a){const e=c(),{coordinates:l,isValidCoords:o}=d(e),s=y(!0),u=()=>s.value=o.value;return V((()=>u())),g((()=>l.value.isValid=o.value)),(a,e)=>(r(),p(v,null,[T,_(n("input",{"aria-invalid":!s.value||void 0,id:"coordInput",placeholder:"+0.00, -0.00",type:"text","onUpdate:modelValue":e[0]||(e[0]=a=>t(l).value=a),onChange:u},null,40,w),[[m,t(l).value]]),s.value?B("",!0):(r(),h(k,{key:0},{default:x((()=>[I("Invalid coordinate format")])),_:1}))],64))}}),E={class:"required",for:"locInput"},F=u({__name:"LocationPlanetInput",props:{locationType:{default:"planet"}},setup(a){const e=c(),{locationName:l}=d(e);return(a,e)=>(r(),p(v,null,[n("label",E,D(t(N)(a.locationType))+" Name",1),_(n("input",{type:"text",id:"locInput","onUpdate:modelValue":e[0]||(e[0]=a=>t(l).value=a)},null,512),[[m,t(l).value]])],64))}});export{F as _,q as a};
